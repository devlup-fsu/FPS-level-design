[gd_scene load_steps=12 format=3 uid="uid://dwyluljtw15dg"]

[ext_resource type="Script" path="res://prefabs/Block.gd" id="1_t1146"]
[ext_resource type="Texture2D" uid="uid://dsbp8d7xy8jpn" path="res://addons/kenney_prototype_textures/red/texture_09.png" id="2_16iim"]

[sub_resource type="BoxShape3D" id="BoxShape3D_p6d2q"]
resource_local_to_scene = true

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_ys7v7"]
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_uyoug"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_0jd2a"]
function = 2

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_qc8eh"]
parameter_name = "Hue"

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_o153u"]
parameter_name = "TextureParameterTriplanar"

[sub_resource type="VisualShader" id="VisualShader_gk8l3"]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D TextureParameterTriplanar;
uniform vec3 Hue;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
}

void fragment() {
// TextureParameterTriplanar:7
	vec4 n_out7p0 = triplanar_texture(TextureParameterTriplanar, triplanar_power_normal, triplanar_pos);


	vec3 n_out5p0;
// ColorFunc:5
	{
		vec3 c = vec3(n_out7p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out5p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// Vector3Parameter:6
	vec3 n_out6p0 = Hue;


// VectorOp:4
	vec3 n_out4p0 = n_out5p0 + n_out6p0;


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = n_out4p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out3p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// Output:0
	ALBEDO = n_out3p0;


}
"
graph_offset = Vector2(-937.924, 1.8794)
nodes/fragment/0/position = Vector2(1080, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_ys7v7")
nodes/fragment/3/position = Vector2(580, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_uyoug")
nodes/fragment/4/position = Vector2(20, 440)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorFunc_0jd2a")
nodes/fragment/5/position = Vector2(-360, 480)
nodes/fragment/6/node = SubResource("VisualShaderNodeVec3Parameter_qc8eh")
nodes/fragment/6/position = Vector2(-480, 680)
nodes/fragment/7/node = SubResource("VisualShaderNodeTextureParameterTriplanar_o153u")
nodes/fragment/7/position = Vector2(-995.415, 687.045)
nodes/fragment/connections = PackedInt32Array(5, 0, 4, 0, 4, 0, 3, 0, 6, 0, 4, 1, 3, 0, 0, 0, 7, 0, 5, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_lsiec"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_gk8l3")
shader_parameter/Hue = Vector3(0, -1, -0.9)
shader_parameter/triplanar_scale = Vector3(1, 1, 1)
shader_parameter/triplanar_offset = null
shader_parameter/triplanar_sharpness = 0.5
shader_parameter/TextureParameterTriplanar = ExtResource("2_16iim")

[sub_resource type="BoxMesh" id="BoxMesh_wgq8g"]
resource_local_to_scene = true
material = SubResource("ShaderMaterial_lsiec")

[node name="Block" type="StaticBody3D"]
script = ExtResource("1_t1146")
color = 6

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_p6d2q")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_wgq8g")
